test-id_syntax:
  stage: test_syntax
  script:
    - test $(echo "lx.x" | ./lambda_calculus) == $(echo "<>" | ./lambda_calculus)
    - test $(echo "la.a" | ./lambda_calculus) == $(echo "<>" | ./lambda_calculus)
    - test $(echo "\\x.x" | ./lambda_calculus) == $(echo "<>" | ./lambda_calculus)
    - test $(echo "\\a.a" | ./lambda_calculus) == $(echo "<>" | ./lambda_calculus)
    - test $(echo "λx.x" | ./lambda_calculus) == $(echo "<>" | ./lambda_calculus)
    - test $(echo "λa.a" | ./lambda_calculus) == $(echo "<>" | ./lambda_calculus)

test-id_id:
  stage: test_base
  needs: [test-id_syntax]
  script:
    - test $(echo "<>" | ./lambda_calculus) == $(echo "<>" | ./lambda_calculus)
    - test $(echo "<><>" | ./lambda_calculus) == $(echo "<>" | ./lambda_calculus)
    - test $(echo "<><><>" | ./lambda_calculus) == $(echo "<>" | ./lambda_calculus)
    - test $(echo "<><><><>" | ./lambda_calculus) == $(echo "<>" | ./lambda_calculus)
    - test $(echo "<><><><>" | ./lambda_calculus) == $(echo "<>" | ./lambda_calculus)

test-id_some:
  stage: test_complex
  needs: [test-id_syntax, test-id_id]
  script:
    - test $(echo "<> 12" | ./lambda_calculus) == $(echo "12" | ./lambda_calculus)
    - test $(echo "<> 5" | ./lambda_calculus) == $(echo "5" | ./lambda_calculus)
    - test $(echo "<> TRUE" | ./lambda_calculus) == $(echo "TRUE" | ./lambda_calculus)
    - test $(echo "<> FALSE" | ./lambda_calculus) == $(echo "FALSE" | ./lambda_calculus)
    - test $(echo "<> <1|2|3>" | ./lambda_calculus) == $(echo "<1|2|3>" | ./lambda_calculus)
    - test $(echo "<> [1,2,3]" | ./lambda_calculus) == $(echo "[1,2,3]" | ./lambda_calculus)
